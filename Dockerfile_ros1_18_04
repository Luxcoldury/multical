# modified from https://github.com/ethz-asl/kalibr/blob/master/Dockerfile_ros1_18_04

FROM osrf/ros:melodic-desktop-full

# use tuna mirror
RUN rm -r /etc/apt/sources.list.d && \
	sh -c "echo 'deb https://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\n\
	deb https://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\n\
	deb https://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n\
	deb https://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\n\
	deb https://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\n\
	deb https://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ bionic main' > /etc/apt/sources.list"

RUN apt-get update && DEBIAN_FRONTEND=noninteractive \
	apt-get install -y \
	git wget autoconf automake nano \
	python3-dev python-pip python-scipy python-matplotlib \
	ipython python-wxgtk4.0 python-tk python-igraph python-pyx \
	libeigen3-dev libboost-all-dev libsuitesparse-dev \
	doxygen \
	libopencv-dev \
	libpoco-dev libtbb-dev libblas-dev liblapack-dev libv4l-dev \
	python-catkin-tools

RUN python -m pip install -i https://mirrors.aliyun.com/pypi/simple --upgrade pip
RUN pip install -i https://mirrors.aliyun.com/pypi/simple open3d==0.9.0 scikit-image

ENV WORKSPACE /catkin_ws

RUN mkdir -p $WORKSPACE/src && \
	cd $WORKSPACE && \
	catkin init && \
	catkin config --extend /opt/ros/melodic && \
	catkin config --cmake-args -DCMAKE_BUILD_TYPE=Release

ADD . $WORKSPACE/src/multical

RUN	cd $WORKSPACE &&\
	catkin build -j$(nproc)

RUN apt install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev

RUN cd / && \
	wget https://registry.npmmirror.com/-/binary/python/3.8.10/Python-3.8.10.tar.xz && \
	tar -xvf Python-3.8.10.tar.xz && \
	cd Python-3.8.10 && \ 
	./configure --enable-optimizations --with-ssl --prefix=/usr/local/python3.8.10 && \
	make && \
	make install && \
	ln -s /usr/local/python3.8.10/bin/python3.8 /usr/bin/python3.8 && \
	ln -s /usr/local/python3.8.10/bin/pip3.8 /usr/bin/pip3.8

RUN python3.8 -m venv /multical-web-env

RUN cd / && \
	git clone https://github.com/Luxcoldury/multical-web.git

RUN bash -c "cd /multical-web && source /multical-web-env/bin/activate && pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple"

RUN	chmod +x /multical-web/docker_entrypoint.sh

ENTRYPOINT ["/multical-web/docker_entrypoint.sh"]

CMD ["multical-web"]
